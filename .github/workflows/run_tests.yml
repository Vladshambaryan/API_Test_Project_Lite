name: CI Pipeline with Allure Reports  # Название рабочего процесса

on:
  push:  # Запуск рабочего процесса при каждом пуше
    branches:
      - main  # Указывает, что процесс запускается только для ветки main
  pull_request:  # Запуск рабочего процесса при создании pull request
    branches:
      - main  # Указывает, что процесс запускается только для ветки main

jobs:
  test:  # Определяет задание с названием "test"
    runs-on: ubuntu-latest  # Указывает, что задание будет выполняться на последней версии Ubuntu

    steps:  # Шаги, которые будут выполняться в задании
    - name: Checkout code  # Шаг по извлечению кода из репозитория
      uses: actions/checkout@v2  # Использует действие для клонирования репозитория

    - name: Set up Python  # Шаг для настройки Python
      uses: actions/setup-python@v2  # Использует действие для установки Python
      with:
        python-version: '3.10'  # Указывает версию Python

    - name: Install dependencies  # Шаг для установки зависимостей проекта
      run: |  # Выполнение нескольких команд
        python -m pip install --upgrade pip  # Обновляет pip до последней версии
        pip install -r requirements.txt  # Устанавливает зависимости из файла requirements.txt

    - name: Run tests with pytest  # Шаг для выполнения тестов с использованием pytest
      run: |  # Выполнение команды
        pytest --alluredir=allure-results  # Запускает тесты и сохраняет результаты в папку allure-results

    - name: Upload Allure results  # Шаг для загрузки результатов Allure
      uses: actions/upload-artifact@v3  # Использует действие для загрузки артефактов
      with:
        name: allure-results  # Имя артефакта
        path: allure-results/  # Путь к артефакту

  report:  # Определяет задание с названием "report"
    runs-on: ubuntu-latest  # Указывает, что задание будет выполняться на последней версии Ubuntu
    needs: test  # Указывает, что это задание зависит от завершения задания "test"

    steps:  # Шаги, которые будут выполняться в задании
    - name: Download previous Allure results  # Шаг для загрузки предыдущих результатов Allure
      uses: actions/download-artifact@v3  # Использует действие для загрузки артефактов
      with:
        name: allure-results  # Имя артефакта для загрузки
        path: previous-allure-results/  # Путь, куда будут загружены артефакты

    - name: Checkout code  # Шаг по извлечению кода из репозитория
      uses: actions/checkout@v2  # Использует действие для клонирования репозитория

    - name: Install Allure  # Шаг для установки Allure
      run: |  # Выполнение нескольких команд
        wget https://github.com/allure-framework/allure2/releases/download/2.22.1/allure-2.22.1.tgz  # Скачивает архив Allure
        tar -zxvf allure-2.22.1.tgz  # Разархивирует скачанный файл
        sudo mv allure-2.22.1 /opt/allure  # Перемещает Allure в директорию /opt
        sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure  # Создает символьную ссылку для удобного доступа к команде allure

    - name: Prepare Allure history  # Шаг для подготовки истории Allure
      run: |  # Выполнение нескольких команд
        mkdir -p allure-history  # Создает папку для хранения истории Allure, если она не существует
        # Копирует историю из предыдущих результатов Allure, если она существует
        if [ -d previous-allure-results/history ]; then
          cp -r previous-allure-results/history/* allure-history/  # Копирует файлы истории в папку allure-history
        fi

    - name: Combine previous and current Allure results  # Шаг для объединения предыдущих и текущих результатов Allure
      run: |  # Выполнение нескольких команд
        mkdir -p combined-allure-results  # Создает папку для объединенных результатов
        if [ -d previous-allure-results ] && [ "$(ls -A previous-allure-results)" ]; then
          cp -r previous-allure-results/* combined-allure-results/  # Копирует предыдущие результаты в объединенную папку
        fi
        if [ -d allure-results ] && [ "$(ls -A allure-results)" ]; then
          cp -r allure-results/* combined-allure-results/  # Копирует текущие результаты в объединенную папку
        fi

    - name: Generate Allure report  # Шаг для генерации отчета Allure
      run: |  # Выполнение команды
        allure generate combined-allure-results -o allure-report  # Генерирует отчет из объединенных результатов

    - name: Upload Allure report  # Шаг для загрузки отчета Allure
      uses: actions/upload-artifact@v3  # Использует действие для загрузки артефактов
      with:
        name: allure-report  # Имя артефакта
        path: allure-report/  # Путь к артефакту

    - name: Upload Allure history  # Шаг для загрузки истории Allure
      uses: actions/upload-artifact@v3  # Использует действие для загрузки артефактов
      with:
        name: allure-history  # Имя артефакта
        path: allure-history/  # Путь к артефакту
