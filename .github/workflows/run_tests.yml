name: CI Pipeline with Allure Reports

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Обновляем pip
        pip install -r requirements.txt  # Устанавливаем зависимости из файла requirements.txt

    - name: Run tests with pytest
      run: |
        pytest --alluredir=allure-results  # Запускаем тесты и сохраняем результаты в allure-results/

    - name: Upload Allure results
      uses: actions/upload-artifact@v3
      with:
        name: allure-results  # Имя артефакта
        path: allure-results/  # Путь к папке с результатами

  report:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Download previous Allure results
      uses: actions/download-artifact@v3
      with:
        name: allure-results  # Имя артефакта для загрузки
        path: previous-allure-results/  # Путь для сохранения загруженных результатов

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Allure
      run: |
        wget https://github.com/allure-framework/allure2/releases/download/2.22.1/allure-2.22.1.tgz  # Скачиваем Allure
        tar -zxvf allure-2.22.1.tgz  # Распаковываем архив
        sudo mv allure-2.22.1 /opt/allure  # Перемещаем распакованные файлы в /opt
        sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure  # Создаем символическую ссылку на исполняемый файл

    - name: Prepare Allure history
      run: |
        mkdir -p allure-history  # Создаем папку для хранения истории
        if [ -d previous-allure-results/history ]; then  # Проверяем, существует ли папка истории
          cp -r previous-allure-results/history/* allure-history/  # Копируем историю из предыдущих результатов
        fi

    - name: Combine previous and current Allure results
      run: |
        mkdir -p combined-allure-results  # Создаем папку для объединенных результатов
        if [ -d previous-allure-results ] && [ "$(ls -A previous-allure-results)" ]; then
          cp -r previous-allure-results/* combined-allure-results/  # Копируем старые результаты
        fi
        if [ -d allure-results ] && [ "$(ls -A allure-results)" ]; then
          cp -r allure-results/* combined-allure-results/  # Копируем текущие результаты
        fi

    - name: Generate Allure report
      run: |
        # Генерирует отчет из объединенных результатов
        allure generate combined-allure-results -o allure-report

    - name: Upload Allure report
      uses: actions/upload-artifact@v3
      with:
        name: allure-report  # Имя артефакта отчета
        path: allure-report/  # Путь к сгенерированному отчету

    - name: Upload Allure history
      uses: actions/upload-artifact@v3
      with:
        name: allure-history  # Имя артефакта истории
        path: allure-history/  # Путь к папке с историей
