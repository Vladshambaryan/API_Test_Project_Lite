name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest --alluredir=allure-results

    - name: Upload Allure results
      uses: actions/upload-artifact@v3
      with:
        name: allure-results
        path: allure-results/

  report:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Download previous Allure results
      uses: actions/download-artifact@v3
      with:
        name: allure-results
        path: previous-allure-results/

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Allure
      run: |
        wget https://github.com/allure-framework/allure2/releases/download/2.22.1/allure-2.22.1.tgz
        tar -zxvf allure-2.22.1.tgz
        sudo mv allure-2.22.1 /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure

    - name: Generate Allure report
      run: |
        # Создаем директорию для объединенных результатов
        mkdir -p combined-allure-results

        # Проверяем на наличие старых результатов и копируем их
        if [ -d previous-allure-results ] && [ "$(ls -A previous-allure-results)" ]; then
          cp -r previous-allure-results/* combined-allure-results/
        fi

        # Копируем новые результаты в ту же директорию
        cp -r allure-results/* combined-allure-results/

        # Генерируем отчет из объединенных результатов
        allure generate combined-allure-results --clean -o allure-report

    - name: Upload Allure report
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: allure-report
